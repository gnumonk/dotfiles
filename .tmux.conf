# Note on binding:
#   bind is the same as bind-key
#   -r means 'repeatable without repeating the prefix'
#   -n means 'does not need prefix'
#
# setw (and set -w) is short for set-window-option, and is window-specific
# set -g  means 'set globally',
# set -u  un-sets,
# set -a  appends to a current value (for strings)
 
set -g default-terminal "xterm-256color" 
# quick reload of this config into the current tmux (useful while fiddling with it)
bind r source-file ~/.tmux.conf
# start numbering at 1, which eases window switch by number (C-a 1, C-a 2)
set -g base-index 0      
set -g status-utf8 on
# History in amount of lines. Infinite is also possible, but I would not recommended it
#    as I once found a tmux with top in it that had allocated 12GB of RAM
set -g history-limit 10000
 
set -g mouse-select-pane on  # switch to pane via mouse. Usually can't hurt
set -g mouse-select-window on  # switch to pane via mouse. Usually can't hurt
set -g mode-mouse on  # adds scrollwheel scrolling (and a few other things)
set -g mouse-resize-pane on                             
#                             # ...but messes with middle-button pastes?
set -g status off 
# set graphical-terminal title
set -g set-titles on
# I like to identify my mess of xterms by the current command
#   and don't care about window numbers and such, so I use:
set -g set-titles-string   '#W#F             #T'
 
 
# add or remap horizontal and vertical pane split to  -  and  |  
# (easier to remember) 
# You can leave the old ones, but I like " as window choosing (like screen)
unbind %
bind-key | splitw -h
unbind '"'
bind-key _ splitw -v
bind-key - splitw -v
 
 
# Pane navigation (I haven't settled on one yet)
 
# Both navigating and resizing panes is useful. 
# using arrow-key combinations for both is easy for me to remember
# I'll navigate more than resize, so I put the latter under is under Shift-arrows
bind -n 'M-Left' select-pane -L
bind -n 'M-Down' select-pane -D
bind -n 'M-Up' select-pane -U
bind -n 'M-Right' select-pane -R
bind -n S-Left resize-pane -L 2
bind -n S-Right resize-pane -R 2
bind -n S-Down resize-pane -D 2
bind -n S-Up resize-pane -U 2

#bind-key -r Left select-pane -L
#bind-key -r Right select-pane -R
#bind-key -r Down select-pane -D
#bind-key -r Up select-pane -U
#bind-key -r S-Left resize-pane -L 2
#bind-key -r S-Right resize-pane -R 2
#bind-key -r S-Down resize-pane -D 2
#bind-key -r S-Up resize-pane -U 2
# see also repeat-time (we stay in )
 
# how long to show pane numbers (C-a q). 
# Default is too fast to scan the screen.
# I don't use this much.
set display-panes-time 2000  # (which is 2sec) 
 
# Cycle through windows, or panes.   I prefer using it for panes
#  (The way I use it, C-a C-a is good for most of my window switching needs)
bind -n f12 select-pane -t :.+

#bind -n f12 next-window
 
 
 
# Set screen-like shortcuts  (also to avoid Ctrl-b for vi users
new-session -s emacs -d 'emacsclient -t'
new-session -s other 
#bind-key ^i  select-pane -t :.+     # C-a C-i: cycle between panes in window
bind-key A   command-prompt "rename-window '%%'"         
bind a command-prompt -p "(rename-pane)" -I "#T" "select-pane -T '%%'"
bind-key '"' choose-window     
bind-key k   confirm-before -p "kill-pane #W? (y/n)" kill-pane
bind-key K   confirm-before -p "kill-window #W? (y/n)" kill-window  
 
 
# Joining windows into panes. (will relayout if the thing being moved is already paned)
# taken from http://unix.stackexchange.com/questions/14300/tmux-move-window-to-pane
##  bind-key j command-prompt -p "join pane from:"  "join-pane -s '%%'"
# bind-key s command-prompt -p "send pane to:"  "join-pane -t '%%'"
# You may also want to know about break-pane, 
#         and remember relayouting via Prefix Meta-[0-5]
 
 
### Style
# puts user@hostname on the left of the window list (in a subtler color)
# clearer (color-based) marker of the active window in that list
# clearer current-pane contrast/coloring
#set -g status-bg green
#set -g status-fg black
#set -g status-left-bg green
#set -g status-left-fg white
#set -g status-left-length 30 # allow more length, for longer hostnames
#set -g window-status-current-bg black
#set -g window-status-current-fg white
#set -g status-right-fg black
#set -g status-right-bg green
#set -g status-right '%H:%M, %a %h %e '
#set-option -g mouse-select-pane on
#set-option -g mouse-select-window on
bind-key S   command-prompt -p "host" "split-window 'ssh %1'"
bind-key C-s command-prompt -p "host" "new-window -n %1  'ssh %1'"

bind-key T   command-prompt -p "host" "split-window 'telnet %1'"
bind-key C-t command-prompt -p "host" "new-window -n %1 'telnet %1'"

bind-key y  switch-client -t emacs
bind-key o  switch-client -t other 
#bind-key C-y split-window "emacsclient -nw"
#set-window-option -g mode-mouse on
set -g pane-border-format "#{pane_index} #T"
set -g pane-border-status top
set -g window-status-current-bg red
